@import './_variables.scss';
@import './_mixins.scss';
@import './_board.scss';
@import './_pieces.scss';

html {  
  font-size: 10px;
  color: $mainColor;
  user-select: none;
  --scaleValue: 1;
  --loaderInfo: "";
  --pieceColor1: "";
  --pieceColor2: "";
  --pieceMovementSpeed: "";
  --pieceMovementEase: "";
  // border: 10px solid green;
}

body {
  height: 95vh;
  width: 100%;
  position: relative;
  background-color: black;  
  // border: 10px solid yellowgreen;
  // border: 1px solid $mainColor;
}

.mainWrap {
  // RETURN TO: width: 640px;
  //440 IS ONLY TO FIT IN DEVTOOLS
  // width: 440px;
  // height: 360px;

  //MAKING LESS THAN INITIAL CALCULATIONS BASELINE, IT FITS THE PAGE BETTER:
  width: 400px;
  height: 300px;
  @include positionAbsoluteRightInTheCenterAndScale(var(--scaleValue));
  background-color: black;
  // border: 1px solid $mainColor;
}

.hidden {
	display: none;
}

.visibilityTest {
  font-size: 3rem;
  @include positionAbsoluteRightInTheCenterAndScale();
}

.loader, .menu {
  position: fixed;
  top:0;
  left:0;
  width: 100%;
	height: 100%;
  font-size: 3rem;
  // DO NOT CHANGE DISPLAY BECAUSE IT NEEDS TO DISAPPEAR WITH CLASS HIDDEN
  // border: 10px solid blue;
}

.loader svg {
  width: 50%;
  height: 50%;  
  @include positionAbsoluteRightInTheCenterAndScale();
}

.loader::after {
content: var(--loaderInfo);
position: absolute;
bottom: 1%;
left: 50%;
transform: translateX(-50%);
color: orangered;
font-size: 2rem;
// border: 10px solid blue;
}

.loadingTest {
  position: absolute;
  top: 50%;
  width: 50px;
  height: 50px;
}



.onlyForTesting {
  position: absolute;
  bottom: 0;
  left: 0;
  width: 150px;
  height: 150px;
  border: 1px solid yellowgreen;
  & svg {
    width: 100%;
    height: 100%;
  }
}

.playBtnDiv {
  @include alignContentCenterWithFlex();
  height: 100%;
  & :hover #path3676 {
    fill:  green;
  }
  & svg {
    width: 100px;
    height: 100px;
    border-radius: 50%;
    // border: 1px solid white;
    & #path3676 {
      fill: red;
      transition: 0.2s;
    }    
  }
  & :hover {
    cursor: pointer;
  }  
}














